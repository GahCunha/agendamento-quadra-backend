generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(USER)
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Court {
  id          Int           @id @default(autoincrement())
  name        String
  location    String
  description String?
  openTime    String
  closeTime   String
  bookings    Booking[]
  blockedTimes BlockedTime[] // Adicionamos esta linha para referenciar os bloqueios
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Booking {
  id         Int            @id @default(autoincrement())
  userId     Int
  courtId    Int
  date       DateTime       
  startTime  DateTime       
  endTime    DateTime       
  status     BookingStatus  @default(PENDING)
  user       User           @relation(fields: [userId], references: [id])
  court      Court          @relation(fields: [courtId], references: [id])
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
}

model BlockedTime {
  id           Int       @id @default(autoincrement())
  courtId      Int
  date         DateTime? // Se for um bloqueio para uma data específica
  startTime    String?   // Se for um bloqueio parcial
  endTime      String?   // Se for um bloqueio parcial
  recurringDay Int?      // Para bloqueios semanais (0 = Domingo, 1 = Segunda, ..., 6 = Sábado)
  reason       String?   // Motivo do bloqueio
  court        Court     @relation(fields: [courtId], references: [id])

  createdAt    DateTime  @default(now())
}

enum BookingStatus {
  PENDING
  APPROVED
  REJECTED
  CANCELLED
}
